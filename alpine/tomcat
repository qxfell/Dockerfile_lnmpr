#Mini Alpine Image Dockerfile For java :
FROM alpine:3.8
MAINTAINER Dictator xfell96@163.com
ARG TZ="Asia/Shanghai"
ENV TZ ${TZ}
ENV LANG en_US.UTF-8
ENV LC_ALL en_US.UTF-8
ENV LANGUAGE en_US:en

RUN sed -i -e 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/' /etc/apk/repositories && \
    apk --update add  wget bash curl ca-certificates tar iproute2 bind-tools tzdata && \
    ln -sf /usr/share/zoneinfo/${TZ} /etc/localtime && echo ${TZ} > /etc/timezone  && \
    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
    wget -O /tmp/glibc-2.30-r0.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-2.30-r0.apk && \
    wget -O /tmp/glibc-bin-2.30-r0.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-bin-2.30-r0.apk && \
    wget -O /tmp/glibc-i18n-2.30-r0.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-i18n-2.30-r0.apk && \
    apk add --allow-untrusted /tmp/glibc-2.30-r0.apk && \
    apk add --allow-untrusted /tmp/glibc-bin-2.30-r0.apk && \
    apk add --allow-untrusted /tmp/glibc-i18n-2.30-r0.apk && \
    /usr/glibc-compat/bin/localedef -i en_US -f UTF-8 en_US.UTF-8 && \
    /usr/glibc-compat/bin/localedef -i zh_CN -f UTF-8 zh_CN.UTF-8 && \
    rm -rf /tmp/glibc-2.30-r0.apk && \
    rm -rf /tmp/glibc-bin-2.30-r0.apk && \
    rm -rf /tmp/glibc-i18n-2.30-r0.apk && \
    rm -rf /etc/apk/keys/sgerrand.rsa.pub && \
    rm -rf /var/cache/apk/* && \
    
# JDK8
ENV JAVA_VERSION 8
ENV JAVA_HOME="/usr/lcoal/java"
ENV JRE_HOME="/usr/local/java/jre"
ENV CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH
ENV PATH=$JAVA_HOME/bin:$PATH
ENV PATH ${PATH}:${JAVA_HOME}/bin



RUN curl -Ls https://flynn-images.oss-cn-beijing.aliyuncs.com/jdk-8u45-linux-x64.tar.gz >/tmp/jdk-8u45-linux-x64.tar.gz && \
    tar xf /tmp/jdk-8u45-linux-x64.tar.gz  -C /usr/lcoal && \
    mv /usr/lcoal/jdk1.8.0_45 /usr/lcoal/java && \
    rm -rf /opt/jdk/*src.zip \
           /opt/jdk/lib/missioncontrol \
           /opt/jdk/lib/visualvm \
           /opt/jdk/lib/*javafx* \
           /opt/jdk/jre/lib/plugin.jar \
           /opt/jdk/jre/lib/ext/jfxrt.jar \
           /opt/jdk/jre/bin/javaws \
           /opt/jdk/jre/lib/javaws.jar \
           /opt/jdk/jre/lib/desktop \
           /opt/jdk/jre/plugin \
           /opt/jdk/jre/lib/deploy* \
           /opt/jdk/jre/lib/*javafx* \
           /opt/jdk/jre/lib/*jfx* \
           /opt/jdk/jre/lib/amd64/libdecora_sse.so \
           /opt/jdk/jre/lib/amd64/libprism_*.so \
           /opt/jdk/jre/lib/amd64/libfxplugins.so \
           /opt/jdk/jre/lib/amd64/libglass.so \
           /opt/jdk/jre/lib/amd64/libgstreamer-lite.so \
           /opt/jdk/jre/lib/amd64/libjavafx*.so \
           /opt/jdk/jre/lib/amd64/libjfx*.so \
           rm -rf /tmp/jdk-8u45-linux-x64.tar.gz    
    
# Tomcat8
ENV TOMCAT_HOME=/opt/tomcat
ENV CATALINA_HOME=/opt/tomcat
ENV PATH="${PATH}:/opt/tomcat/bin"
ENV JAVA_OPTS="-server -Xmx256m -Xms128m -Xmn64m"
COPY entrypoint.sh web.xml context.xml /tmp/


RUN curl -Ls https://flynn-images.oss-cn-beijing.aliyuncs.com/apache-tomcat-8.0.46.tar.gz >/tmp/apache-tomcat-8.0.46.tar.gz && \
    mkdir /opt && \
    tar xf /tmp/apache-tomcat-8.0.46.tar.gz -C /opt && \
    mv /opt/apache-tomcat-8.0.46 /opt/tomcat && \
    mv /tmp/entrypoint.sh /bin/entrypoint.sh && \
    chmod +x /bin/entrypoint.sh && \
    mv /tmp/web.xml /tmp/context.xml ${TOMCAT_HOME}/conf/ && \
    rm -rf /tmp/* /var/cache/apk/* && \
    USER_ID=${TOMCAT_USER_ID:-1000} && \
    GROUP_ID=${TOMCAT_GROUP_ID:-1000} && \
    addgroup -g ${GROUP_ID} tomcat && \
    adduser -u ${USER_ID} -G tomcat -h ${CATALINA_HOME} -D -s /sbin/nologin tomcat && \
    chown -L -R tomcat:tomcat ${CATALINA_HOME} && chmod 400 ${CATALINA_HOME}/conf/* && \
    sync

EXPOSE 8080
CMD [ "catalina.sh", "run" ]
ENTRYPOINT [ "/bin/entrypoint.sh" ]
