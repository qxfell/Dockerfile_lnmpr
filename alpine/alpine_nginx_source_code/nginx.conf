user nginx nginx;

worker_processes  auto;
error_log  /var/log/nginx/error.log  warn;
pid      /var/run/nginx/nginx.pid;
worker_rlimit_nofile 51200;
events {
    use epoll;
    worker_connections  12800;
}

http {
    server_tokens off;
    include       mime.types;
    default_type  application/octet-stream;
    server_names_hash_bucket_size 128;
    server_names_hash_max_size 512;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 128k;
    client_max_body_size 8m;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    autoindex   off;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout  120;

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;


    gzip  on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types  text/plain application/x-javascript text/css application/xml; # 安装目录下minme.types 里定义了压缩类型
    gzip_vary on;

    include /etc/nginx/conf.d/*.conf;

    # upstream example
    # 默认轮训
    # backup;  备机
    # down;  不参与 在upstream去掉，下掉流量
    # fail_timeout  max_fails次后，暂停的时间
    # max_fails  请求失败的次数
#    upstream xxx_server_name{
#
#     server 192.168.10.1:80;
#     server 192.168.10.2:80;
#     server 192.168.10.3:80;
#
#    }
#
#    #权重轮训
#    upstream xxx_server_name{
#
#     server 192.168.10.1:80 weight=1;
#     server 192.168.10.2:80 weight=2;
#     server 192.168.10.3:80 weight=3;
#
#    }
#
#    #ip_hash
#    upstream xxx_server_name{
#
#     ip_hash;
#     server 192.168.10.1:80;
#     server 192.168.10.2:80;
#     server 192.168.10.3:80;
#
#    }
#
#    #url_has
#    upstream xxx_server_name{
#
#     server 192.168.10.1:80;
#     server 192.168.10.2:80;
#     server 192.168.10.3:80;
#     hash $request_uri;
#     hash_method crc32;
#
#    }
#
#    #upstr_fair for need download module
#    upstream xxx_server_name{
#
#     server 192.168.10.1:80;
#     server 192.168.10.2:80;
#     server 192.168.10.3:80;
#     fail;
#    }


}
